import tkinter as tk
from tkinter import ttk
import re

def check_password_strength(password):
    strength_points = 0
    feedback = []

    if len(password) >= 8:
        strength_points += 1
    else:
        feedback.append("üî∏ At least 8 characters required.")

    if re.search(r'[A-Z]', password):
        strength_points += 1
    else:
        feedback.append("üî∏ Add an uppercase letter.")

    if re.search(r'[a-z]', password):
        strength_points += 1
    else:
        feedback.append("üî∏ Add a lowercase letter.")

    if re.search(r'[0-9]', password):
        strength_points += 1
    else:
        feedback.append("üî∏ Add a number.")

    if re.search(r'[\W_]', password):
        strength_points += 1
    else:
        feedback.append("üî∏ Add a special character.")

    if strength_points == 5:
        status = "Strong üí™"
        color = "green"
    elif strength_points >= 3:
        status = "Moderate ‚ö†Ô∏è"
        color = "orange"
    else:
        status = "Weak ‚ùå"
        color = "red"

    return status, feedback, color

def on_key_release(event):
    password = password_entry.get()
    status, feedback, color = check_password_strength(password)

    strength_label.config(text=f"Strength: {status}", foreground=color)

    feedback_text.config(state='normal')
    feedback_text.delete('1.0', tk.END)
    for line in feedback:
        feedback_text.insert(tk.END, f"{line}\n")
    feedback_text.config(state='disabled')

# ==== GUI Setup ====
root = tk.Tk()
root.title("Password Strength Checker")
root.geometry("400x300")
root.resizable(False, False)

# Password input
ttk.Label(root, text="Enter Password:", font=("Arial", 12)).pack(pady=10)
password_entry = ttk.Entry(root, show="*", font=("Arial", 12), width=30)
password_entry.pack()
password_entry.bind("<KeyRelease>", on_key_release)

# Strength display
strength_label = ttk.Label(root, text="Strength: ", font=("Arial", 12, "bold"))
strength_label.pack(pady=10)

# Feedback area
feedback_text = tk.Text(root, height=6, width=45, wrap="word", font=("Arial", 10))
feedback_text.pack(pady=5)
feedback_text.config(state='disabled')

root.mainloop()


